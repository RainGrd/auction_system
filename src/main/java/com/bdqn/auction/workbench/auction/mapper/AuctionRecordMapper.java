package com.bdqn.auction.workbench.auction.mapper;

import com.bdqn.auction.workbench.auction.entity.AuctionRecord;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface AuctionRecordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auction_record
     *
     * @mbggenerated Wed Sep 21 20:09:32 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auction_record
     *
     * @mbggenerated Wed Sep 21 20:09:32 CST 2022
     */
    int insert(AuctionRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auction_record
     *
     * @mbggenerated Wed Sep 21 20:09:32 CST 2022
     */
    int insertSelective(AuctionRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auction_record
     *
     * @mbggenerated Wed Sep 21 20:09:32 CST 2022
     */
    AuctionRecord selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auction_record
     *
     * @mbggenerated Wed Sep 21 20:09:32 CST 2022
     */
    int updateByPrimaryKeySelective(AuctionRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auction_record
     *
     * @mbggenerated Wed Sep 21 20:09:32 CST 2022
     */
    int updateByPrimaryKey(AuctionRecord record);

    /**
     * 根据商品id查询竞拍商品信息
     */
    List<AuctionRecord> selectAuctionRecordListByAuctionId(@Param("auctionId") String auctionId);

    /**
     * 插入商品
     */
    int insertAuctionRecord(@Param("auctionRecord") AuctionRecord auctionRecord);

    /**
     * 根据用户Id去查询其拍卖过的商品
     */
    List<AuctionRecord> selectAuctionRecordByUserId(String userId);

    /**
     * 根据查询出来的商品Id查询当前用户竞拍过的商品
     */
    AuctionRecord selectAuctionRecordByAuctionId(@Param("auctionId") String auctionId);
    /**
     * 根据查询出来的商品Id查询当前用户竞拍过的商品
     */
    List<AuctionRecord> selectAuctionRecordByAuctionIdAndEndTime(@Param("auctionId") String auctionId);
    /**
     * 查询正在拍卖的用户
     */
    List<AuctionRecord> selectAuctionRecordUserByEndTime();
}